source('~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/R/CMEtest.R')
library(CMEtest)
CovSpec
require(CMEtest)
CMEtest::CovSpec
source('~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/R/CMEtest.R')
library(CMEtest)
library(CMEtest)
a <- CovSpec()
summary(a)
a <- CovSpec(estim="mcd")
summary(a)
cov_shrink
load("/home/stark-three/temp/returnanalytics/pkg/PortfolioAnalytics/data/indexes.rda")
indexes
class(indexes)
names(indexes)
library(CMEtest)
demo()
demo("demoTest")
source('~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/demo/demoTest.R')
library(CMEtest)
library("CMEtest")
library(CMEtest)
# Cleaning Environment
rm(list = ls())
# Loading packages
suppressMessages(library(robust))
suppressMessages(require(PortfolioAnalytics))
suppressMessages(require(PerformanceAnalytics))
suppressMessages(library(tawny))
# Loading  optimization packages
suppressMessages(require(ROI))
suppressMessages(require(ROI.plugin.glpk))
suppressMessages(require(ROI.plugin.quadprog))
##################
## Loading test ##
##################
library("CMEtest")
##################
## Loading data ##
##################
# Loading edhec data
data(sp500.subset)
returns <- sp500.subset[1:50,1:10]
assets <- colnames(returns)
##################################################
## Specifying Global Minimum Variance portfolio ##
##################################################
## Specifying portfolio
port_gmv <- portfolio.spec(assets = assets)
## specifying long only constraing
long_const = 0
## specifying unform upper box constraints
upper_box <- 0.60
## Setting constraints
port_gmv <- add.constraint(portfolio = port_gmv,
type = "box",
min = long_const,
max = upper_box)
## Adding objective function
port_gmv <- add.objective(portfolio = port_gmv,
type = "risk",
name = "var")
## Showing portfolio specification
print(port_gmv)
###############################
print(port_gmv)
###############################
## Specifying CME cov object ##
###############################
## Specifying sample cov
mleCovSpec <- CovSpec(smooth = NULL,
estim = 'mle',
shrink = NULL,
filter = NULL)
library("CMEtest")
CMEtest::
getwd()
setwd("~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest")
library(CMEtest)
source('~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/R/CMEtest-package.r')
source('~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/R/CMEtest-package.r')
library(CMEtest)
library(CMEtest)
library(CMEtest)
CMEtest::
CMEtest::
library(CMEtest)
library(CMEtest)
