{
    "contents" : "%\\VignetteEngine{knitr::knitr}\n%\\VignetteIndexEntry{}\n\\documentclass[12pt,letterpaper,english]{article}\n\\usepackage[OT1]{fontenc}\n\n\\usepackage{verbatim}\n\\usepackage{Rd}\n\\usepackage{amsmath}\n\n\\begin{document}\n\n\n\\title{Using CMEtest with PortfolioAnalytics}\n\\author{Mohamed Ishmael Diwan Belghazi}\n\n\\maketitle\n\n\\begin{abstract}\nThe purpose of this vignette is to show how to pass custom location and scatter estimators to PortfolioAnalytics using CMEtest.\n\\end{abstract}\n\n\\tableofcontents\n\n\\section{Preliminaries}\n\\subsection{Loading packages}\nLoading Packages and sourcefiles. CMEtest is not yet under package format as some thinking is still required concerning it's internal architecture.\n<<>>=\n# Cleaning Environment\nrm(list = ls())\n# Loading packages\nsuppressMessages(require(robust))\nsuppressMessages(require(PortfolioAnalytics))\nsuppressMessages(require(PerformanceAnalytics))\nsuppressMessages(require(tawny))\n# Loading  optimization packages\nsuppressMessages(require(ROI))\nsuppressMessages(require(ROI.plugin.glpk))\nsuppressMessages(require(ROI.plugin.quadprog))\n\n##################\n## Loading test ##\n##################\n\nlibrary(CMEtest)\noptions(width=60)\n@\nFor now, the package tawny is loaded only for the dataset.\n\\subsection{Loading Data}\nWe take 50 observations for 10 assets.\n<<>>=\n##################\n## Loading data ##\n##################\n\n# Loading edhec data\ndata(sp500.subset)\nreturns <- sp500.subset[1:50,1:10]\nassets <- colnames(returns)\n@\n\n\n\\section{Defining portfolio}\n\nWe define a Global minimum variance long only portfolio with Box Constraint. Since we are optimizing a var objective, we can use the ROI solver.\n\n<<>>=\n## Specifying portfolio\nport_gmv <- portfolio.spec(assets = assets)\n## specifying long only constraing\nlong_const = 0\n## specifying unform upper box constraints\nupper_box <- 0.60\n\n## Setting constraints\nport_gmv <- add.constraint(portfolio = port_gmv,\n                           type = \"box\",\n                           min = long_const,\n                           max = upper_box)\n## Adding objective function\nport_gmv <- add.objective(portfolio = port_gmv,\n                          type = \"risk\",\n                          name = \"var\")\n\n## Showing portfolio specification\nprint(port_gmv)\n\n@\n\nWe show the portfolio specifications\n<<>>=\n## Showing portfolio specification\nprint(port_gmv)\n@\n\n\\section{Using CMEtest}\n\\subsection{Construting specification}\nFor the time being only robust estimation is implemented. Smoothing, shrinking and filtering will be implemented when the architecture will have matured.\n\nWe specify an mle (classical covariance) specification and call the summary function.\n<<tidy=FALSE>>=\n## Specifying sample cov\n\nmleCovSpec <- CovSpec(smooth = NULL,\n                      estim = 'mle',\n                      shrink = NULL,\n                      filter = NULL)\nclass(mleCovSpec)\n\n## Showing summary\nsummary(mleCovSpec)\n@\n\nWe also specify an minimum covariance robust estimator (mcd).\nThe Minimum Covariance Determinant estimator is a robust estimator of a data set’s covariance introduced by Rousseeuw(1984). The idea is to find a given proportion (h) of “good” observations which are not outliers and compute their empirical covariance matrix. This empirical covariance matrix is then rescaled to compensate the performed selection of observations (“consistency step”).\n\n<<>>=\nrobCovSpec <- CovSpec(smooth = NULL,\n                      estim = 'mcd',\n                      shrink = NULL,\n                      filter = NULL)\n\nclass(robCovSpec)\n\n## Showing summary\nsummary(robCovSpec)\n@\n\n\\subsection{Creating moment functions for PortfolioAnalytics}\n\nCreating moment functions for Portfolio Analytics is straightforward using CMEtest. It is enough, to call the MakeMomentFUN function of the specification object.\n\n<<>>=\n##  Generating Moment functions. These functions will dynamically compute\n## location and scatter when passed to optimize.portfolio.\n\nMleMomentFUN <- MakeMomentFUN(mleCovSpec)\nRobMomentFUN <- MakeMomentFUN(robCovSpec)\n@\nNote that for RobMomenFun, only the location and scatter are robust. The third and fourth moment are not computed using robust method. It does not matter if the optimization method and/or objective use at most the first moments.\nAn example where it matters, is when using the Cornish-Fisher approximation of a non-normal distribution. The latter approximation being based on the four first cumulant.\n\n\\section{Optimizing the portfolios!}\n\\subsection{Dynamic moment functions and optimization}\nWe are now ready to passe the generated moment functions.\nlet us optimize the portfolios!\n<<>>=\n###################################\n## Let's Optimize the potfolios! ##\n###################################\n\n# mle version\nopt_gmv_mle <- optimize.portfolio(R = returns,\n                                 portfolio = port_gmv,\n                                 optimize_method = \"ROI\",\n                                 momentFUN = \"MleMomentFUN\",\n                                 trace = TRUE)\n\n## Robust version\nopt_gmv_rob <- optimize.portfolio(R = returns,\n                                 portfolio = port_gmv,\n                                 optimize_method = \"ROI\",\n                                 momentFUN = \"RobMomentFUN\",\n                                 trace = TRUE)\n\n\n@\nLet us extract the weights\nFor the mle estimator\n<<>>=\nextractWeights(opt_gmv_mle)\n@\nFor the mcd estimator\n<<>>=\nextractWeights(opt_gmv_rob)\n@\n\\subsection{Computed moment functions and optimization}\nRobust moment computing can be expansive. Thankfully, It is also possible to geenrate pre-computed moment functions. The process is very straightforward, instead of calling the moment making function on a CMEtest specification object it is enough to call it on a CMEtest estimation Object\n\nLet us first explicitly compute the covariance. In order to do so, one has to use the Estimate() generic function on the specification object and on the choosen dataset.\n<<tidy=FALSE>>=\n## Let us compute the covariances\nmleCovEst <- Estimate(mleCovSpec, returns)\nclass(mleCovEst)\nrobCovEst <- Estimate(robCovSpec, returns)\nclass(robCovEst)\n\n@\nAlthought it is not necessary, let's get the empirical and robust correlations just for fun.\n\nMLE estimator correlation:\n<<>>=\n## Altough not required let us check the covariance just for fun\nGetCorr(mleCovEst)\n@\nRobust Mcd estimator correlation:\n<<>>=\nGetCorr(robCovEst)\n@\n\\subsection{Generating precomputed moment functions}\nNow that we have the estimation object, generating the precomputed moment function as easy as before. One has just to call the MakeMomentFUN function on the CMEtest estimation object.\n\n<<>>=\n## Now we create Precomputed moment functions\nMlePrecompMomentFUN <- MakeMomentFUN(mleCovEst)\nRobPrecompMomentFUN <- MakeMomentFUN(robCovEst)\n@\n\n\\subsection{Optimizing portfolio with precomputed moment functions}\n<<>>=\n# mle version\nopt_gmv_mle <- optimize.portfolio(R = returns,\n                                 portfolio = port_gmv,\n                                 optimize_method = \"ROI\",\n                                 momentFUN = \"MlePrecompMomentFUN\",\n                                 trace = TRUE)\n\n## Robust version\nopt_gmv_rob <- optimize.portfolio(R = returns,\n                                 portfolio = port_gmv,\n                                 optimize_method = \"ROI\",\n                                 momentFUN = \"RobPrecompMomentFUN\",\n                                 trace = TRUE)\n\n\nextractWeights(opt_gmv_mle)\nextractWeights(opt_gmv_rob)\n\n@\n\n\\end{document}\n",
    "created" : 1395614322662.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "724318993",
    "id" : "BA1DA27C",
    "lastKnownWriteTime" : 1395614344,
    "path" : "~/Dropbox/gsoc2014/GSOC2014/testpkgfinal/CMEtest/vignettes/CMETestAndPaVignette.Rnw",
    "project_path" : "vignettes/CMETestAndPaVignette.Rnw",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "sweave"
}